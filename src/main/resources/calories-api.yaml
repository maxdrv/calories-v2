openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Calories
  license:
    name: MIT
servers:
  - url: http://localhost:8080/
paths:
  /baseProducts:
    get:
      summary: Page of base products
      operationId: pageProducts
      tags:
        - baseProduct
      parameters:
        - name: name
          in: query
          description: filter by name of baseProduct
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: a page of base products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageOfBaseProductDto"
    post:
      summary: create new base product
      operationId: createBaseProduct
      tags:
        - baseProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBaseProductRequest"
      responses:
        '201':
          description: created base product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseProductDto"
  /baseProducts/{baseProductId}:
    get:
      summary: get base product by id
      operationId: baseProductById
      tags:
        - baseProduct
      parameters:
        - name: baseProductId
          in: path
          required: true
          description: The id of the base product to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: base product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseProductDto"
    put:
      summary: update new base product
      operationId: updateBaseProduct
      tags:
        - baseProduct
      parameters:
        - name: baseProductId
          in: path
          required: true
          description: The id of the base product to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBaseProductRequest"
      responses:
        '200':
          description: updated base product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseProductDto"
    delete:
      summary: delete base prodcut
      operationId: deleteBaseProduct
      tags:
        - baseProduct
      parameters:
        - name: baseProductId
          in: path
          required: true
          description: The id of the base product to delete
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: base product deleted successfully
  /api/v1/dish:
    get:
      summary: Page of dishes
      operationId: pageDishes
      tags:
        - dish
      parameters:
        - name: name
          in: query
          description: filter by name of dish
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: a page of dishes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageOfDishDto"

  /api/v1/suggest:
    get:
      summary: get entity by string representation
      operationId: suggestEntityByName
      tags:
        - suggest
      parameters:
        - name: name
          in: query
          description: filter entity by string representation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: suggest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestDto"

components:
  schemas:
    CreateBaseProductRequest:
      type: object
      required:
        - name
        - nutrients
      properties:
        name:
          type: string
        nutrients:
          $ref: "#/components/schemas/NutrientsDto"
    UpdateBaseProductRequest:
      type: object
      required:
        - name
        - nutrients
      properties:
        name:
          type: string
        nutrients:
          $ref: "#/components/schemas/NutrientsDto"
    NutrientsDto:
      type: object
      required:
        - kcal
        - proteins
        - fats
        - carbs
      properties:
        kcal:
          type: number
          format: double
        proteins:
          type: number
          format: double
        fats:
          type: number
          format: double
        carbs:
          type: number
          format: double
    BaseProductDto:
      type: object
      required:
        - id
        - name
        - nutrients
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        nutrients:
          $ref: "#/components/schemas/NutrientsDto"
    PageOfBaseProductDto:
      type: object
      required:
        - content
      properties:
        size:
          type: integer
        number:
          type: integer
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        content:
          type: array
          items:
            $ref: "#/components/schemas/BaseProductDto"
    PortionDto:
      type: object
      required:
        - id
        - grams
        - baseProduct
      properties:
        id:
          type: integer
          format: int64
        grams:
          type: integer
        baseProduct:
          $ref: "#/components/schemas/BaseProductDto"
    DishDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        portions:
          type: array
          items:
            $ref: "#/components/schemas/PortionDto"
    PageOfDishDto:
      type: object
      required:
        - content
      properties:
        size:
          type: integer
        number:
          type: integer
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        content:
          type: array
          items:
            $ref: "#/components/schemas/DishDto"
    SuggestDto:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/EntityDto"
    EntityDto:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

